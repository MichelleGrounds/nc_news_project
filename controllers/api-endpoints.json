{
  "endpoints": {
    "api": {
      "GET": {
        "inputTaken": "null",
        "outputGiven": "A JSON object with all endpoints available"
      }
    },
    "api/topics": {
      "GET": {
        "inputTaken": "null",
        "outputGiven": "An array of topic objects with the properties slug and description"
      }
    },
    "api/users/:userid": {
      "GET": {
        "inputTaken": "parametric endpoint to be completed with a username string",
        "outputGiven": "A user object with the properties username, avatar_url and name"
      }
    },
    "api/articles/:article_id": {
      "GET": {
        "inputTaken": "parametric endpoint to be completed with an artcile_id as a number",
        "outputGiven": "An article object with the properties author, title, article_id, body, topic, created_at, votes and comment_count"
      },
      "PATCH": {
        "inputTaken": "parametric endpoint to be completed with an artcile_id as a number & an object in the form {inc_votes: newVote}",
        "outputGiven": "an article object with the updated article"
      }
    },
    "api/articles/:article_id/comments": {
      "GET": {
        "inputTaken": "parametric endpoint to be completed with an article_id as a number, a query 'sort_by' to sort any valid column (default: created_at), query 'order' to sort asc or desc (default: desc) ",
        "outputGiven": "an array of comments for the given article_id, of which each comment has the following properties: comment_id, votes, created_at, author, body"
      },
      "POST": {
        "inputTaken": "a numeric article_id in the url, and an object with the properties username and body",
        "outputGiven": "the posted comment"
      }
    },
    "api/articles": {
      "GET": {
        "inputTaken": "Can take the following queries: sort_by: any valid column, defaults to created_at; order: asc or desc, defaults to desc; author: filters articles by username; topic: filters articles by topic",
        "outputGiven": "an articles array of article objects, with the following properties: author, title, article_id, topic, created_at, votes and comment_count. "
      }
    },
    "api/comments/:comment_id": {
      "PATCH": {
        "inputTaken": "a numeric comment_ic. An object in the form {inc_votes: newVote}. newVote will indicate how much will be added to the votes property, positive and negative numbers accepted",
        "outputGiven": "the updated comment"
      },
      "DELETE": {
        "inputTaken": "a numeric comment_id",
        "outputGiven": "none, status 204"
      }
    }
  }
}
